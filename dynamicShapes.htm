<html>
<head>
<title>loEngine</title>
<script src="loEngine.src.js"></script>
<script type="application/javascript">

// Event class
var loTick = loEngineEvents.create();

// Light source placeholder
var circle	= loCircle.create( 200, 200, 50 )
circle.aniPos = 0


// Sample layer
var layer_1 = loContainer.findLayer( "Layer 1" )

function keydownControl(e){}

function draw()
{
	var canvas = document.getElementById("loDemo");
	var ctx = canvas.getContext("2d");
	
	ctx.clearRect(0, 0, canvas.width, canvas.height);
	ctx.fillStyle = "#000";
	ctx.strokeStyle = "#000";

	// Draw the level (debug draw)
	layer_1.render( ctx, true )
	
	// Draw the circle (debug draw)
	loDrawDebug( ctx, circle, "rgba(50,50,200,0.4)" );
	
	var dbgConsole = document.getElementById('loDebugConsole')
	if( dbgConsole )
	{
		dbgConsole.innerHTML = "";
		
		layer_1.eachObj
		(
			function( loObj )
			{
				dbgConsole.innerHTML += loObj + "<br>"
			}
		)
	}
}

function demoSetup()
{
	cvs = document.getElementById("loDemo");
	
	window.onkeydown = keydownControl;
	
	// Create a circle
	layer_1.push( loCircle.create( 350, 200, 20 ) )
	
	// Create a hexagon within a radius of 50 units
	layer_1.push( loCreateHexagon( 300, 100, loConfine( 50 ) ) )
	
	// Also push multiple objects in an array
	layer_1.push(
		[
			// Special case
			loCreateRect( 100, 100, 50, 25 ),
			
			// Triangle, confined to specific radius
			loCreateTri( 100, 300, loConfine( 50 ) ),
			
			// Longhand polygon creation
			loPolygon.create( 300, 300, loConfine( 50 ), loMakeNArray( Math.random() * 8 +3 ) )
		]
	)
	
	// For demo: rotate circle around (200,200)
	// NEW using optional firstTick flag
	loTick.add(
		6, 
		function()
		{
			var p = loPolygon.makeVertex( circle.aniPos, 50 )
		
			circle.x = 200 + p.x
			circle.y = 200 + p.y
		
			circle.aniPos += 2
		},
		true
	)
	
	// For demo: random rotation
	loTick.add(
		5,
		function()
		{
			// Rotate each object
			layer_1.eachObj
			(
				function( loObj )
				{
					// if not a circle
					if( loObj.points )
						loObj.rotate( loObj.angle +2 );
				}
			)
		}
	)
	
	/*
		NOTE: scene renderer should be pushed last
		also note that it only needs to tick as fast as the slowest ticker
	*/
	loTick.add(
		5,
		function()
		{
			draw();
		}
	)
	
	loTick.starti();
}

  </script>
 </head>
 <body onload="demoSetup()">
	loEngine v0.4<br>
	
<hr>	
   <canvas id="loDemo" width="800" height="600">
	Sorry, your browser doesn't support canvas technology
   </canvas>
   <div id='loDebugConsole'></div>
   <hr>
 </body>
 
</html>

